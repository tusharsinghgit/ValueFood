{"ast":null,"code":"var _jsxFileName = \"D:\\\\Microsoft Project\\\\value-food\\\\src\\\\Components\\\\RecipePage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { fetchRecipes } from './RecipeApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RecipePage({\n  match\n}) {\n  _s();\n  const [recipe, setRecipe] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchRecipe = async () => {\n      try {\n        // Fetch recipe data using recipe URI from URL params\n        const recipeUri = match.params.recipeUri;\n        const recipesData = await fetchRecipes(recipeUri);\n        // Assuming fetchRecipes returns an array of recipes, extract the first recipe\n        const recipe = recipesData[0].recipe;\n        setRecipe(recipe);\n        setLoading(false);\n        setError(null);\n      } catch (error) {\n        setError('Failed to fetch recipe. Please try again later.');\n        setLoading(false);\n      }\n    };\n    fetchRecipe();\n  }, [match.params.recipeUri]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 23\n  }, this);\n  if (!recipe) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: recipe.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: recipe.image,\n      alt: recipe.label,\n      style: {\n        width: '300px',\n        height: '300px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Ingredients:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: recipe.ingredientLines.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: ingredient\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total Calories: \", recipe.calories.toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: recipe.url,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      children: \"View Recipe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(RecipePage, \"D4f7ADreHOsnANfRAHmG+SPJvWc=\");\n_c = RecipePage;\nexport default RecipePage;\nvar _c;\n$RefreshReg$(_c, \"RecipePage\");","map":{"version":3,"names":["React","useEffect","useState","fetchRecipes","jsxDEV","_jsxDEV","RecipePage","match","_s","recipe","setRecipe","loading","setLoading","error","setError","fetchRecipe","recipeUri","params","recipesData","children","fileName","_jsxFileName","lineNumber","columnNumber","label","src","image","alt","style","width","height","ingredientLines","map","ingredient","index","calories","toFixed","href","url","target","rel","_c","$RefreshReg$"],"sources":["D:/Microsoft Project/value-food/src/Components/RecipePage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { fetchRecipes } from './RecipeApi';\r\n\r\nfunction RecipePage({ match }) {\r\n    const [recipe, setRecipe] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchRecipe = async () => {\r\n            try {\r\n                // Fetch recipe data using recipe URI from URL params\r\n                const recipeUri = match.params.recipeUri;\r\n                const recipesData = await fetchRecipes(recipeUri);\r\n                // Assuming fetchRecipes returns an array of recipes, extract the first recipe\r\n                const recipe = recipesData[0].recipe;\r\n                setRecipe(recipe);\r\n                setLoading(false);\r\n                setError(null);\r\n            } catch (error) {\r\n                setError('Failed to fetch recipe. Please try again later.');\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchRecipe();\r\n    }, [match.params.recipeUri]);\r\n\r\n    if (loading) return <p>Loading...</p>;\r\n    if (error) return <p>{error}</p>;\r\n    if (!recipe) return null;\r\n\r\n    return (\r\n        <div>\r\n            {/* Display recipe details here */}\r\n            <h1>{recipe.label}</h1>\r\n            <img src={recipe.image} alt={recipe.label} style={{ width: '300px', height: '300px' }} />\r\n            <p>Ingredients:</p>\r\n            <ul>\r\n                {recipe.ingredientLines.map((ingredient, index) => (\r\n                    <li key={index}>{ingredient}</li>\r\n                ))}\r\n            </ul>\r\n            <p>Total Calories: {recipe.calories.toFixed(2)}</p>\r\n            <a href={recipe.url} target=\"_blank\" rel=\"noopener noreferrer\">View Recipe</a>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RecipePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}